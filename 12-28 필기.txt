■ 하둡 수업 
					small data	vs	big data
	* 하둡 목차			오라클 SQL		하둡 Hive

		1. 하둡을 배워야 하는 이유
		2. 하둡 설치
		3. 하둡 분산 파일 시스템 명령어
		4. Hive
		5. Pig
		6. Tajo
		7. sqoop으로 오라클과 연동
		8. 맵리듀스를 java로 수행하기



	리눅스 시스템을 켜고 하둡시스템을 이용하려면 
	[orcl:~]$ start-all.sh	<--- 이 명령어를 날려야 한다.




	어느 디렉토리에서든 하이브에 들어갈 수 있게 시스템에 경로를 설정한다.

	[orcl:~]$ vi .bash_profile
	
	=========================================
	추가
	export HIVE_HOME=/home/oracle/hive-0.12.0
	export PATH=$HIVE_HOME/bin:$PATH
	=========================================
	
	[orcl:~]$ . .bash_profile




■ 3. 하둡 분산 파일 시스템 명령어

	1. ls 		  -> 지정된 디렉토리에 있는 파일의 정보를 출력
	2. lsr 		  -> 현재 디렉토리 뿐만 아니라 하위 디렉토리까지 조회
	3. du 		  ->  파일의 용량 확인
	4. dus 		  -> 파일의 전체 합계 용량 확인
	5. cat 		  -> 지정된 파일의 내용을 화면에 출력
	6. text 	  -> zip 파일 형태도 text 형대로 화면에 출력
	7. mkdir 	  -> 디렉토리 생성
	8. put 		  -> 파일을 하둡 파일 시스템에 올리는 명령어 
	9. copyFromLocal  -> 파일 복사 
	10. get 	  -> 하둡 파일 시스템의 파일을 리눅스 디렉토리로 내리는 
	           	     명령어 
	11. getmerge 	  -> 지정된 경로에 있는 모든 파일의 내용을 합친후
	                     하나의 파일로 복사하는 명령어
	12. mv 		  -> 파일을 이동하는 명령어
	13. moveFromLocal -> 복사후 원본 파일 삭제
	14. rm 		  -> 파일 삭제
	15. rmr 	  -> 디렉토리 삭제  
	16. count 	  -> 지정된 디렉토리의 파일의 갯수 확인 
	17. tail 	  -> 파일의 마지막 내용 확인
	18. chmod 	  -> 권한 변경
	19. chown 	  -> 소유자 변경
	20. tochz 	  -> 0 바이트 파일 생성
	21. stat 	  -> 통계정보 조회
	22. expuge 	  -> 휴지통 비우기 
	23. grep	  -> 파일에서 특정 문자의 라인을 검색
	24. awk 	  -> 파일의 특정 컬럼을 검색 



문제 2. 하둡 파일 시스템 명령어의 help를 조회하시오 !

	[orcl:~]$ hadoop fs -help
	hadoop fs is the command to execute fs commands. The full syntax is:
				:
				:
				:
	-help [cmd]:    Displays help for given command or all commands if none
	                is specified.

	[orcl:~]$ hadoop fs -help du
	-du <path>:     Show the amount of space, in bytes, used by the files that
	                match the specified file pattern.  Equivalent to the unix
	                command "du -sb <path>/*" in case of a directory,
	                and to "du -b <path>" in case of a file.
	                The output is in the form
	                        name(full path) size (in bytes)
	


문제 3. 겨울왕국 대본 winter.txt를 하둡 파일시스템에 올리시오 !

	[orcl:~]$ hadoop fs -put /home/oracle/winter.txt winter.txt
	[orcl:~]$ hadoop fs -ls winter.txt
	Found 1 items
	-rw-r--r--   3 oracle supergroup     222718 2018-12-28 11:43 /user/oracle/winter.txt



문제 4. 하둡 파일시스템에 emp2.csv파일을 올리시오 !

	[orcl:~]$ hadoop fs -put /home/oracle/emp2.csv emp2.csv
	[orcl:~]$ hadoop fs -ls emp2.csv
	Found 1 items
	-rw-r--r--   3 oracle supergroup        630 2018-12-28 11:50 /user/oracle/emp2.csv



문제 5. 하둡 파일 시스템에 올라간 emp2.csv를 cat으로 조회하시오 ! (점심시간 문제)

	[orcl:~]$ hadoop fs -cat emp2.csv
	7839,KING,PRESIDENT,0,1981-11-17,5000,0,10
	7698,BLAKE,MANAGER,7839,1981-05-01,2850,0,30
	7782,CLARK,MANAGER,7839,1981-05-09,2450,0,10
	7566,JONES,MANAGER,7839,1981-04-01,2975,0,20
	7654,MARTIN,SALESMAN,7698,1981-09-10,1250,1400,30
	7499,ALLEN,SALESMAN,7698,1981-02-11,1600,300,30
	7844,TURNER,SALESMAN,7698,1981-08-21,1500,0,30
	7900,JAMES,CLERK,7698,1981-12-11,950,0,30
	7521,WARD,SALESMAN,7698,1981-02-23,1250,500,30
	7902,FORD,ANALYST,7566,1981-12-11,3000,0,20
	7369,SMITH,CLERK,7902,1980-12-09,800,0,20
	7788,SCOTT,ANALYST,7566,1982-12-22,3000,0,20
	7876,ADAMS,CLERK,7788,1983-01-15,1100,0,20
	7934,MILLER,CLERK,7782,1982-01-11,1300,0,10



문제 6. 직업이 salesman인 사원들의 모든 데이터를 출력하시오 !

	[orcl:~]$ hadoop fs -cat emp2.csv | grep -i 'salesman'

	[orcl:~]$ hadoop fs -cat emp2.csv | awk -F ',' '$3=="SALESMAN"'

	7654,MARTIN,SALESMAN,7698,1981-09-10,1250,1400,30
	7499,ALLEN,SALESMAN,7698,1981-02-11,1600,300,30
	7844,TURNER,SALESMAN,7698,1981-08-21,1500,0,30
	7521,WARD,SALESMAN,7698,1981-02-23,1250,500,30



문제 7. 월급이 3000인 사원의 이름과 월급을 출력하시오 !

	[orcl:~]$ hadoop fs -cat emp2.csv | awk -F ',' '$6==3000 {print $2, $6}'
	FORD 3000
	SCOTT 3000



문제 8. dept2.csv를 하둡 파일 시스템에 올리시오 !

	[orcl:~]$ hadoop fs -put /home/oracle/dept2.csv dept2.csv
	[orcl:~]$ hadoop fs -ls dept2.csv
	Found 1 items
	-rw-r--r--   3 oracle supergroup         84 2018-12-28 14:31 /user/oracle/dept2.csv
	[orcl:~]$ hadoop fs -cat dept2.csv
	10,ACCOUNTING,NEW YORK
	20,RESEARCH,DALLAS
	30,SALES,CHICAGO
	40,OPERATIONS,BOSTON





문제 9. hive로 접속해서 dept테이블을 생성하시오 !
============================================================
[orcl:~]$ hive

Logging initialized using configuration in jar:file:/home/oracle/hive-0.12.0/lib/hive-common-0.12.0.jar!/hive-log4j.properties
hive> show tables;
OK
Time taken: 6.46 seconds
hive>  create table dept
    >  (deptno   int,
    >   dname    string,
    >   loc      string )
    >  ROW FORMAT DELIMITED
    >     FIELDS TERMINATED BY ','
    >     LINES TERMINATED BY '\n'
    >     STORED AS TEXTFILE;
OK
Time taken: 0.371 seconds
hive> show tables;
OK
dept
Time taken: 0.083 seconds, Fetched: 1 row(s)
============================================================


문제 10. emp2.csv는 emp테이블로 로드하고 dept2.csv 는 dept테이블로 로드하시오 !

	create table emp          
	(empno int,  
	ename string,
	job string,
	mgr int,
	hiredate string,
	sal int,
	comm int,
	deptno int)
	 ROW FORMAT DELIMITED 
	 FIELDS TERMINATED BY ','
	 LINES TERMINATED BY '\n'
	 STORED AS TEXTFILE ;

	hive> load  data  inpath  '/user/oracle/emp2.csv'
	    > overwrite  into  table   emp;

	 create table dept 
	 (deptno   int,
	  dname    string,
	  loc      string )
	 ROW FORMAT DELIMITED
	    FIELDS TERMINATED BY ','
	    LINES TERMINATED BY '\n'
	    STORED AS TEXTFILE; 

	hive> load  data  inpath  '/user/oracle/dept2.csv'
	    > overwrite  into  table   dept;


문제 11. hive에서 월급이 3000인 사원들의 이름과 월급을 출력하시오 !

	hive> select ename, sal
	    > from emp
	    > where sal = 3000;
	Total MapReduce jobs = 1
	Launching Job 1 out of 1
	Number of reduce tasks is set to 0 since there's no reduce operator
	Starting Job = job_201812281026_0001, Tracking URL = http://localhost:50030/jobdetails.jsp?	jobid=job_201812281026_0001
	Kill Command = /u01/app/hadoop/hadoop-1.2.1/libexec/../bin/hadoop job  -kill job_201812281026_0001
	Hadoop job information for Stage-1: number of mappers: 1; number of reducers: 0
	2018-12-28 15:15:33,170 Stage-1 map = 0%,  reduce = 0%
	2018-12-28 15:15:36,341 Stage-1 map = 100%,  reduce = 0%, Cumulative CPU 1.06 sec
	2018-12-28 15:15:37,351 Stage-1 map = 100%,  reduce = 0%, Cumulative CPU 1.06 sec
	2018-12-28 15:15:38,364 Stage-1 map = 100%,  reduce = 100%, Cumulative CPU 1.06 sec
	MapReduce Total cumulative CPU time: 1 seconds 60 msec
	Ended Job = job_201812281026_0001
	MapReduce Jobs Launched:
	Job 0: Map: 1   Cumulative CPU: 1.06 sec   HDFS Read: 838 HDFS Write: 21 SUCCESS
	Total MapReduce CPU Time Spent: 1 seconds 60 msec
	OK
	FORD    3000
	SCOTT   3000
	Time taken: 10.457 seconds, Fetched: 2 row(s)



문제 12. 직업, 직업별 토탈월급을 출력하시오 !
	hive> select job, sum(sal)
	    > from emp
	    > group by job;
	
	Total MapReduce CPU Time Spent: 2 seconds 310 msec
	OK
	ANALYST 6000
	CLERK   4150
	MANAGER 8275
	PRESIDENT       5000
	SALESMAN        5600
	Time taken: 21.692 seconds, Fetched: 5 row(s)



문제 13. 위의 결과를 다시 출력하는데 토탈월급이 높은 것부터 출력하시오 !
	hive> select job, sum(sal) as sumsal
	    > from emp
	    > group by job
	    > order by sumsal desc;
		
	Total MapReduce CPU Time Spent: 4 seconds 90 msec
	OK
	MANAGER 8275
	ANALYST 6000
	SALESMAN        5600
	PRESIDENT       5000
	CLERK   4150
	Time taken: 36.645 seconds, Fetched: 5 row(s)

		※ hive에서 그룹함수를 order by 할때는 컬럼별칭을 사용해야 한다.


문제 14. 부서번호, 부서번호별 평균월급을 출력하는데 부서번호별 평균월급이 낮은것 부터 출력하시오 !.

	hive> select deptno, avg(sal) as avgsal
	    > from emp
	    > group by deptno
	    > order by avgsal;
	
	Total MapReduce CPU Time Spent: 4 seconds 230 msec
	OK
	30      1566.6666666666667
	20      2175.0
	10      2916.6666666666665
	Time taken: 37.706 seconds, Fetched: 3 row(s)


문제 15. emp와 dept를 조인해서 이름과 부서위치를 출력하시오 !

	※ hive 에서는 1999 ansi 조인문법만 지원된다.

	hive> select e.ename, d.loc
	    >   from emp e join dept d
	    >   on( e.deptno = d.deptno);
	
	Total MapReduce CPU Time Spent: 790 msec
	OK
	KING    NEW YORK
	BLAKE   CHICAGO
	CLARK   NEW YORK
	JONES   DALLAS
	MARTIN  CHICAGO
	ALLEN   CHICAGO
	TURNER  CHICAGO
	JAMES   CHICAGO
	WARD    CHICAGO
	FORD    DALLAS
	SMITH   DALLAS
	SCOTT   DALLAS
	ADAMS   DALLAS
	MILLER  NEW YORK
	Time taken: 11.044 seconds, Fetched: 14 row(s)



문제 16. 직업, 직업별 토탈월급을 출력하는데 직업이 SALESMAN은 제외하고 출력하고 직업별 토탈월급이 4000이상인
	 것만 출력하시오 !

	※ hive에서는 having절이 지원 안된다.

	※ hive에서 from절의 서브쿼리를 사용할 때는 별칭을 사용해야 한다.

	hive> select *
	    >   from (select job, sum(sal) as sumsal
	    >           from emp
	    >           where job != 'SALESMAN'
	    >           group by job) a
	    >   where a.sumsal >= 5000;
	
	Total MapReduce CPU Time Spent: 2 seconds 940 msec
	OK
	ANALYST 6000
	MANAGER 8275
	PRESIDENT       5000



문제 17. 부서위치, 부서위치별 토탈월급을 출력하시오 !

	hive> select d.loc,  sum(e.sal) as sumsal
	    >   from emp e join dept d
	    >   on ( e.deptno = d.deptno)
	    >   group by d.loc;
	
	Total MapReduce CPU Time Spent: 2 seconds 540 msec
	OK
	CHICAGO 9400
	DALLAS  10875
	NEW YORK        8750
	Time taken: 24.485 seconds, Fetched: 3 row(s)



문제 18. full outer join이 가능한지 확인해보시오 !

	hive> select e.ename, d.loc
	    >   from emp e full outer join dept d
	    >   on ( e.deptno = d.deptno );
	
	Total MapReduce CPU Time Spent: 3 seconds 70 msec
	OK
	MILLER  NEW YORK
	CLARK   NEW YORK
	KING    NEW YORK
	JONES   DALLAS
	FORD    DALLAS
	SMITH   DALLAS
	SCOTT   DALLAS
	ADAMS   DALLAS
	MARTIN  CHICAGO
	ALLEN   CHICAGO
	TURNER  CHICAGO
	JAMES   CHICAGO
	WARD    CHICAGO
	BLAKE   CHICAGO
	NULL    BOSTON
	Time taken: 22.249 seconds, Fetched: 15 row(s)








■ hive에서 data 분석함수 사용하기


문제 19. 이름, 월급, 순위를 출력하는데 순위가 월급이 높은 사원부터 출력되게 하시오 !

	hive> select ename, sal, rank() over (order by sal desc)
	    >   from emp;
	
	Total MapReduce CPU Time Spent: 2 seconds 620 msec
	OK
	KING    5000    1
	FORD    3000    2
	SCOTT   3000    2
	JONES   2975    4
	BLAKE   2850    5
	CLARK   2450    6
	ALLEN   1600    7
	TURNER  1500    8
	MILLER  1300    9
	WARD    1250    10
	MARTIN  1250    10
	ADAMS   1100    12
	JAMES   950     13
	SMITH   800     14
	Time taken: 21.356 seconds, Fetched: 14 row(s)
	


문제 20. 부서번호, 이름, 월급, 순위를 출력하는데 순위가 부서번호별로 각각 월급이 높은 사원순으로 순위를
	 부여하시오 !

	hive> select deptno, ename, sal, rank() over (partition by deptno order by sal desc)
	    > from emp;

	Total MapReduce CPU Time Spent: 2 seconds 430 msec
	OK
	10      KING    5000    1
	10      CLARK   2450    2
	10      MILLER  1300    3
	20      FORD    3000    1
	20      SCOTT   3000    1
	20      JONES   2975    3
	20      ADAMS   1100    4
	20      SMITH   800     5
	30      BLAKE   2850    1
	30      ALLEN   1600    2
	30      TURNER  1500    3
	30      MARTIN  1250    4
	30      WARD    1250    4
	30      JAMES   950     6
	Time taken: 20.024 seconds, Fetched: 14 row(s)


문제 21. 사원번호, 이름, 월급, 월급의 누적치가 출력되게 하시오 !

	hive> select empno, ename, sal, sum(sal) over (order by empno)
	    > from emp;
	
	Total MapReduce CPU Time Spent: 2 seconds 230 msec
	OK
	7369    SMITH   800     800
	7499    ALLEN   1600    2400
	7521    WARD    1250    3650
	7566    JONES   2975    6625
	7654    MARTIN  1250    7875
	7698    BLAKE   2850    10725
	7782    CLARK   2450    13175
	7788    SCOTT   3000    16175
	7839    KING    5000    21175
	7844    TURNER  1500    22675
	7876    ADAMS   1100    23775
	7900    JAMES   950     24725
	7902    FORD    3000    27725
	7934    MILLER  1300    29025
	Time taken: 20.16 seconds, Fetched: 14 row(s)
	

문제 22. 부서번호, 사원번호, 이름, 월급, 월급의 누적치가 출력되게 하는데 부서번호별로 각각 월급의 누적치가
	 출력되게 하시오 !

	hive> select deptno, empno, ename, sal, sum(sal) over (partition by deptno order by empno)
	    > from emp;

	Total MapReduce CPU Time Spent: 2 seconds 460 msec
	OK
	10      7782    CLARK   2450    2450
	10      7839    KING    5000    7450
	10      7934    MILLER  1300    8750
	20      7369    SMITH   800     800
	20      7566    JONES   2975    3775
	20      7788    SCOTT   3000    6775
	20      7876    ADAMS   1100    7875
	20      7902    FORD    3000    10875
	30      7499    ALLEN   1600    1600
	30      7521    WARD    1250    2850
	30      7654    MARTIN  1250    4100
	30      7698    BLAKE   2850    6950
	30      7844    TURNER  1500    8450
	30      7900    JAMES   950     9400
	Time taken: 20.175 seconds, Fetched: 14 row(s)






■ 오라클과 hive의 함수 비교 

	1. 문자함수
			오라클		vs	hive
			upper			upper
			lower			lower
			initcap			  x
			substr			substr
			concat			concat
			trim			trim
			ltrim			ltrim
			rtrim			rtrim
			lpad			  x
			rpad			  x

	2. 숫자함수
			round			round
			trunc			  x
			power			power

	3. 날짜함수
			months_between		months_between
			add_months		add_months
			next_day		next_day
			last_day		last_day

	4. 변환함수
			to_date			to_date
			to_char			cast
			to_number		cast
						year
						month
						day



문제 23. 이름을 출력하는데 이름을 첫글자만 출력하고 그 첫글자를 소문자로 출력하시오 !

	hive> select lower(substr(ename,1,1))
	    > from emp;
	
	Total MapReduce CPU Time Spent: 1 seconds 20 msec
	OK
	k
	b
	c
	j
	m
	a
	t
	j
	w
	f
	s
	s
	a
	m
	Time taken: 12.967 seconds, Fetched: 14 row(s)


문제 24. 이름, 입사한 년도 4자리를 출력하시오!

	hive> select ename, from_unixtime(unix_timestamp(hiredate, 'yyyy-mm-dd'),'yyyy') as yearmm
	    > from emp;

	Total MapReduce CPU Time Spent: 1 seconds 280 msec
	OK
	KING    1981
	BLAKE   1981
	CLARK   1981
	JONES   1981
	MARTIN  1981
	ALLEN   1981
	TURNER  1981
	JAMES   1981
	WARD    1981
	FORD    1981
	SMITH   1980
	SCOTT   1982
	ADAMS   1983
	MILLER  1982
	Time taken: 7.458 seconds, Fetched: 14 row(s)



문제 25. 이름, 입사한 달을 출력하시오 !

	hive> select ename, from_unixtime(unix_timestamp(hiredate, 'yyyy-mm-dd'),'mm') as mm
	    > from emp;
	
	Total MapReduce CPU Time Spent: 1 seconds 20 msec
	OK
	KING    11
	BLAKE   05
	CLARK   05
	JONES   04
	MARTIN  09
	ALLEN   02
	TURNER  08
	JAMES   12
	WARD    02
	FORD    12
	SMITH   12
	SCOTT   12
	ADAMS   01
	MILLER  01
	Time taken: 11.855 seconds, Fetched: 14 row(s)



문제 26. 부서번호, 부서번호별 토탈월급을 가로로 출력하시오 !

	SQL> select sum ( decode(deptno,10,sal) ) "10",
		    sum ( decode(deptno,20,sal) ) "20",
		    sum ( decode(deptno,30,sal) ) "30"
	     from emp;

		※ hive에서는 case문을 사용해야 한다.

	hive> select sum(case when deptno=10 then sal end) dept10,
	    >        sum(case when deptno=20 then sal end) dept20,
	    >        sum(case when deptno=30 then sal end)
	    > from emp;
	
	Total MapReduce CPU Time Spent: 2 seconds 600 msec
	OK
	8750    10875   9400
	Time taken: 20.233 seconds, Fetched: 1 row(s)

		★ 컬럼명이 나오게 하고 싶다면 ??

		hive> set hive.cli.print.header=true;
		hive> select sum(case when deptno=10 then sal end) dept10,
		    >        sum(case when deptno=20 then sal end) dept20,
		    >        sum(case when deptno=30 then sal end)
		    > from emp;
		
		Total MapReduce CPU Time Spent: 2 seconds 570 msec
		OK
		dept10  dept20  _c2
		8750    10875   9400
		Time taken: 20.277 seconds, Fetched: 1 row(s)




문제 27. (오늘의 마지막 문제) 아래의 SQL을 Hive로 구현하시오 !

	SQL> select job,
		    sum ( decode(deptno,10,sal) ) "dept10",
		    sum ( decode(deptno,20,sal) ) "dept20",
		    sum ( decode(deptno,30,sal) ) "dept30"
	     from emp
	     group by job;

	hive> set hive.cli.print.header=true;
	hive> select job,
	    >        sum(case when deptno=10 then sal end) dept10,
	    >        sum(case when deptno=20 then sal end) dept20,
	    >        sum(case when deptno=30 then sal end) dept30
	    > from emp
	    > group by job;
	
	Total MapReduce CPU Time Spent: 2 seconds 590 msec
	OK
	job     dept10  dept20  dept30
	ANALYST NULL    6000    NULL
	CLERK   1300    1900    950
	MANAGER 2450    2975    2850
	PRESIDENT       5000    NULL    NULL
	SALESMAN        NULL    NULL    5600
	Time taken: 16.755 seconds, Fetched: 5 row(s)















