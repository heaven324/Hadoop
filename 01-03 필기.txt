문제 89. 월급이 1250 인 사원들의 이름과 월급을 출력하시오 !

	SQL> select ename, sal
	       from emp
	       where sal = 1250;
	
	> db.emp.find( {sal:{$eq:1250}}, {_id:0, ename:1, sal:1})
	
	{ "ename" : "WARD", "sal" : 1250 }
	{ "ename" : "MARTIN", "sal" : 1250 }



문제 90. 월급이 1000에서 3000 사이인 사원들의 이름과 월급을 출력하시오 !

	SQL> select ename, sal
	       from emp
	       where sal >= 1000 and sal <= 3000;

	> db.emp.find( {$and: [ {sal:{$gte:1000, $lte:3000}} ] }, {_id:0, ename:1, sal:1})
	
	> db.emp.find( {$and: [ {sal:1000}, {sal:3000} ] }, {_id:0, ename:1, sal:1})



문제 91. 사원번호가 7788 또는 7902인 사원들의 사원번호와 이름과 월급을 출력하시오 !

	> db.emp.find( {$or: [ {empno:{$eq:7788}}, {empno:{$eq:7902}} ] }, {_id:0, empno:1, ename:1, sal:1})
	{ "empno" : 7788, "ename" : "SCOTT", "sal" : 3000 }
	{ "empno" : 7902, "ename" : "FORD", "sal" : 3500 }



문제 92. 부서번호를 출력하는데 중복제거해서 출력하시오 !

	SQL> select distinct deptno
               from emp;

	> db.emp.distinct('deptno')
	[ 20, 30, 10 ]



문제 93. 사원 테이블의 전체 건수를 출력하시오 !

	SQL> select count(*)
               from emp;

	> db.emp.count()
	14


문제 94. 직업이 SALESMAN인 사원들의 인원수를 출력하시오 !

	SQL> select count(*)
               from emp
               where job = 'SALESMAN';

	> db.emp.find( {job:{$eq:"SALESMAN"}} ).count()

	> db.emp.count( {job:'SALESMAN'} )



문제 95. 월급이 3000이상인 사원들의 인원수를 출력하시오 !

	SQL> select count(*)
	       from emp
	       where sal >= 3000;


	> db.emp.count( {sal:{$gte:3000}})
	3


문제 96. 사원테이블 전체의 최대월급을 출력하시오 !

	SQL> select max(sal)
	       from emp;

	> db.emp.find( {} , { _id:0, sal:1 } ).sort( {sal:-1} ).limit(1)
	{ "sal" : 5000 }



문제 97. 직업이 SALESMAN인 사원들의 최대 월급을 출력하시오 !

	SQL> select max(sal)
	       from emp
	       where job = 'SALESMAN';

	> db.emp.find( {job:'SALESMAN'} , { _id:0, sal:1 } ).sort( {sal:-1} ).limit(1)
	{ "sal" : 1600 }



문제 98. 사원테이블의 토탈월급을 출력하시오 !

	SQL> select sum(sal)
	       from emp;

	> db.emp.aggregate( [ {$group: {_id:null, total:{$sum:'$sal'}}}])


문제 99. 최대월급을 출력하시오 !

	SQL> select max(sal)
	       from emp;

	> db.emp.aggregate( [ {$group: {_id:0, max:{$max:'$sal'} } } ] )
	{ "_id" : 0, "max" : 5000 }



문제 100. 최소월급을 출력하시오 !

	SQL> select min(sal)
	       from emp;

	> db.emp.aggregate( [ {$group: {_id:0, min:{$min:'$sal'} } } ] )
	{ "_id" : 0, "min" : 950 }



문제 101. 직업이 SALESMAN인 사원들의 최대 월급을 출력하시오 !

	SQL> select max(sal)
	       from emp
	       where job = 'SALESMAN';

	> db.emp.aggregate( [{$match: {job:'SALESMAN'}}, {$group: {_id:0, max:{$max:'$sal'} } } ] )
	{ "_id" : 0, "max" : 1600 }



문제 102. 부서번호가 30번인사원들의 최대 월급을 출력하시오 1

	SQL> select max(sal)
	       from emp
	       where deptno = 30;
	
	> db.emp.aggregate( [{$match: {deptno:30}}, {$group: {_id:0, max:{$max:'$sal'} } } ] )
	{ "_id" : 0, "max" : 2850 }



문제 103. 부서번호, 부서번호별 토탈월급을 출력하시오 !

	SQL> select deptno, sum(sal)
	       from emp
	       group by deptno;
	
	> db.emp.aggregate( [ {$group: {_id:'$deptno' , total:{$sum:'$sal'} } } ] )
	{ "_id" : 10, "total" : 7450 }
	{ "_id" : 30, "total" : 7800 }
	{ "_id" : 20, "total" : 15275 }



문제 104. 직업, 직업별 최대월급을 출력하시오 !

	SQL> select job, max(sal)
	       from emp
	       group by job;

	> db.emp.aggregate( [ {$group: {_id:'$job', max:{$max:'$sal'} } } ] )
	{ "_id" : "PRESIDENT", "max" : 5000 }
	{ "_id" : "ANALYST", "max" : 3500 }
	{ "_id" : "MANAGER", "max" : 2975 }
	{ "_id" : "SALESMAN", "max" : 1600 }
	{ "_id" : "CLERK", "max" : 1800 }



문제 105. 직업, 직업별 토탈월급을 출력하는데 직업이 SALESMAN인 사원을 제외하고 출력하시오 !

	SQL> select job, sum(sal)
	       from emp
	       where job != 'SALESMAN';

	> db.emp.aggregate({$match:{job:{ $ne:'SALESMAN'}}}, {$group:{_id:'$job', total:{$sum:'$sal'}}})
	{ "_id" : "PRESIDENT", "total" : 5000 }
	{ "_id" : "ANALYST", "total" : 6500 }
	{ "_id" : "MANAGER", "total" : 8275 }
	{ "_id" : "CLERK", "total" : 5150 }


문제 106. 직업, 직업별 토탈월급을 출력하는데 직업이 SALESMAN은 제외하고 출력하고 직업별 토탈월급이 높은것부터
	  출력하시오 !

	SQL> select job, sum(sal) sumsal
	       from emp
	       where job != 'SALESMAN'
	       order by sumsal desc;

	> db.emp.aggregate({$match:{job:{$ne:'SALESMAN'}}},
			   {$group:{_id:'$job', total:{$sum:'$sal'}}}, 
			   {$sort:{'total':-1}})
	{ "_id" : "MANAGER", "total" : 8275 }
	{ "_id" : "ANALYST", "total" : 6500 }
	{ "_id" : "CLERK", "total" : 5150 }
	{ "_id" : "PRESIDENT", "total" : 5000 }


문제 107. 직업, 직업별 토탈월급을 출력하는데 직업이 SALESMAN인 사원은 제외하고 출력하고 직업별 토탈월급이 
	  6000 이상인 것만 출력하고 직업별 토탈월급이 높은것 부터 출력하시오 !

	> db.emp.aggregate({$match:{job:{$ne:'SALESMAN'}}},
			   {$group:{_id:'$job', total:{$sum:'$sal'}}}, 
			   {$match:{total:{$gte:6000}}},
			   {$sort:{'total':-1}})

	{ "_id" : "MANAGER", "total" : 8275 }
	{ "_id" : "ANALYST", "total" : 6500 }



문제 108. 이름의 첫번째 철자가 A로 시작하는 사람들의 이름과 월급을 출력하시오 

	SQL> select ename, sal
	       from emp
	       where ename like 'A%';
	
	> db.emp.find({ename:/^A/}, {_id:0, ename:1, sal:1})
	{ "ename" : "ALLEN", "sal" : 1600 }
	{ "ename" : "ADAMS", "sal" : 1100 }




문제 109. 이름의 끝 글자가 T로 끝나는 사원들의 이름과 월급을 출력하시오 !

	SQL> select ename, sal
	        from emp
	        where ename like '%T';
	
	> db.emp.find({ename:/T$/}, {_id:0, ename:1, sal:1})
	{ "ename" : "SCOTT", "sal" : 3000 }




< 점심시간 문제 두 문제 검사>

문제 110. 이름에 두번째 철자가 M인 사원들의 이름과 월급을 출력하시오 !

	> db.emp.find({ename:/^.M/}, {_id:0, ename:1, sal:1})
	{ "ename" : "SMITH", "sal" : 1800 }



문제 111. 이름에 A를 포함하고 있는 사원들의 이름과 월급을 출력하시오 !

	> db.emp.find({ename:/.*A.*/}, {_id:0, ename:1, sal:1})
	{ "ename" : "ALLEN", "sal" : 1600 }
	{ "ename" : "WARD", "sal" : 1250 }
	{ "ename" : "MARTIN", "sal" : 1250 }
	{ "ename" : "BLAKE", "sal" : 2850 }
	{ "ename" : "CLARK", "sal" : 2450 }
	{ "ename" : "ADAMS", "sal" : 1100 }
	{ "ename" : "JAMES", "sal" : 950 }










■ Mongodb를 터미널 창이 아닌 SQL gate같은 툴에서 사용하는 방법

	https://www.robomongo.org/
		    ↓
	     Robo 3T 다운로드 ( robo3t-1.2.1-windows-x86_64-3e50a65.exe )









■ mongodb에서의 조인문장 


문제 112. dept 테이블을 mongodb에서 생성하시오 !

db.dept.save({deptno:10,dname:"ACCOUNTING",loc:"NEW YORK"})
db.dept.save({deptno:20,dname:"RESEARCH",loc:"DALLAS"})
db.dept.save({deptno:30,dname:"SALES",loc:"CHICAGO"})
db.dept.save({deptno:40,dname:"OPERATIONS",loc:"BOSTON"})

db.getCollection('dept').find({})



문제 113. 부서위치가 DALLAS의 부서번호를 출력하시오 !

	> db.dept.find({loc:'DALLAS'}, {_id:0, deptno:1})
	20.0



문제 114. 이름과 부서위치를 출력하시오 !

	db.emp.aggregate([
	{
	    $lookup:
	    {
	        from:"dept",
	        localField:"deptno",
	        foreignField:"deptno",
	        as:"aa"
	        }
	    },
	    { $project:
	        {
	            _id:0,
	            ename:1,
	            aa:{loc:1}
	        }
	    }
	])



문제 115. 이름과 월급과 부서명을 출력하시오 !

db.emp.aggregate([
{
    $lookup:
    {
        from:"dept",
        localField:"deptno",
        foreignField:"deptno",
        as:"aa"
        }
    },
    { $project:
        {
            _id:0,
            ename:1,
            sal:1,
            aa:{dname:1}
        }
    }
    ])










■ Mongodb에서의 DML문

1. insert
2. update
3. delete



문제 116. SCOTT의 월급을 5600으로 변경하시오 !

	SQL> update emp set sal =5600 where ename = 'SCOTT';
	
	db.emp.update(
	               {ename:'SCOTT'},
	               {$set:{sal:5600} },
	               {multi:true}
	             )
	SCOTT 5600.0



문제 117. 월급이 3000이상인 사원들의 comm을 7000으로 수정하시오 !

	db.emp.update( {sal:{$gte:3000}},
	               {$set:{comm:7000}},
	               {multi:true}
	             )
	Updated 3 existing record(s) in 3ms




문제 118. 직업이 ANALYST인 사원들을 삭제하시오 !

	SQL> delete from emp where job = 'ANALYST';
	
	db.emp.remove( {job:'ANALYST'}
	             )
	Removed 2 record(s) in 28ms



문제 119. emp 테이블을 전체를 지우시오 !

	db.emp.remove( {empno:{$ne:0}}
                     )
	Removed 12 record(s) in 19ms












■ MySQL

설치법 : https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-centos-7 참고


drop table emp;
drop table dept;

CREATE TABLE dept
(deptNO int,
DNAME VARCHAR(14),
LOC VARCHAR(13) );

INSERT INTO dept VALUES (10, 'ACCOUNTING', 'NEW YORK');
INSERT INTO dept VALUES (20, 'RESEARCH', 'DALLAS');
INSERT INTO dept VALUES (30, 'SALES', 'CHICAGO');
INSERT INTO dept VALUES (40, 'OPERATIONS', 'BOSTON');

CREATE TABLE emp (
empNO int NOT NULL,
ENAME VARCHAR(10),
JOB VARCHAR(9),
MGR int,
HIREDATE DATE,
SAL int,
COMM int,
deptNO int );

INSERT INTO emp VALUES (7839,'KING','PRESIDENT',NULL,'81-11-17',5000,NULL,10);
INSERT INTO emp VALUES (7698,'BLAKE','MANAGER',7839,'81-05-01',2850,NULL,30);
INSERT INTO emp VALUES (7782,'CLARK','MANAGER',7839,'81-05-09',2450,NULL,10);
INSERT INTO emp VALUES (7566,'JONES','MANAGER',7839,'81-04-01',2975,NULL,20);
INSERT INTO emp VALUES (7654,'MARTIN','SALESMAN',7698,'81-09-10',1250,1400,30);
INSERT INTO emp VALUES (7499,'ALLEN','SALESMAN',7698,'81-02-11',1600,300,30);
INSERT INTO emp VALUES (7844,'TURNER','SALESMAN',7698,'81-08-21',1500,0,30);
INSERT INTO emp VALUES (7900,'JAMES','CLERK',7698,'81-12-11',950,NULL,30);
INSERT INTO emp VALUES (7521,'WARD','SALESMAN',7698,'81-02-23',1250,500,30);
INSERT INTO emp VALUES (7902,'FORD','ANALYST',7566,'81-12-11',3000,NULL,20);
INSERT INTO emp VALUES (7369,'SMITH','CLERK',7902,'80-12-09',800,NULL,20);
INSERT INTO emp VALUES (7788,'SCOTT','ANALYST',7566,'82-12-22',3000,NULL,20);
INSERT INTO emp VALUES (7876,'ADAMS','CLERK',7788,'83-01-15',1100,NULL,20);
INSERT INTO emp VALUES (7934,'MILLER','CLERK',7782,'82-01-11',1300,NULL,10);

commit;


RDBMS : 1. Oracle
	2. MySQL


문제 120. 직업이 SALESMAN인 사원들의 이름과 월급과 직업을 출력하는데 월급이 높은 사원부터 출력하시오 !

	select ename, sal, job
	  from emp
	  where job = 'salesman'
	  order by sal desc;
	
		※ 오라클과는 다르게 salesman을 소문자로 써도 된다.




문제 121. 이름과 커미션을 출력하는데 커미션이 null인 사원들은 0으로 출력하시오 !

	※ 오라클 vs MySQL
	    nvl	     ifnull

	mysql> select ename, ifnull(comm, 0)
	    ->   from emp;
	+--------+-----------------+
	| ename  | ifnull(comm, 0) |
	+--------+-----------------+
	| KING   |               0 |
	| BLAKE  |               0 |
	| CLARK  |               0 |
	| JONES  |               0 |
	| MARTIN |            1400 |
	| ALLEN  |             300 |
	| TURNER |               0 |
	| JAMES  |               0 |
	| WARD   |             500 |
	| FORD   |               0 |
	| SMITH  |               0 |
	| SCOTT  |               0 |
	| ADAMS  |               0 |
	| MILLER |               0 |
	+--------+-----------------+
	14 rows in set (0.00 sec)




문제122. 오늘 날짜를 출력하시오.

	오라클 vs mySQL
	sysdate   sysdate()

	mysql> select sysdate() from dual;

	+---------------------+
	| sysdate()           |
	+---------------------+
	| 2019-01-03 17:28:11 |
	+---------------------+
	1 row in set (0.00 sec)
	


문제123. 이름, 입사한 날짜부터 오늘까지 총 며칠 근무했는지 출력하시오.

	SQL> select ename, round(sysdate - hiredate)
	       from emp;

	mySQL> select ename, to_days(sysdate())-to_days(hiredate)
		 from emp;

	+--------+--------------------------------------+
	| ename  | to_days(sysdate())-to_days(hiredate) |
	+--------+--------------------------------------+
	| KING   |                                13561 |
	| BLAKE  |                                13761 |
	| CLARK  |                                13753 |
	| JONES  |                                13791 |
	| MARTIN |                                13629 |
	| ALLEN  |                                13840 |
	| TURNER |                                13649 |
	| JAMES  |                                13537 |
	| WARD   |                                13828 |
	| FORD   |                                13537 |
	| SMITH  |                                13904 |
	| SCOTT  |                                13161 |
	| ADAMS  |                                13137 |
	| MILLER |                                13506 |
	+--------+--------------------------------------+





문제124. 이름, 입사한 날짜부터 오늘까지 총 몇 달 근무했는지 출력하시오.
	SQL> select ename, months_between(sysdate,hiredate)
	       from emp;

	mySQL> select ename, period_diff(date_format(now(),'%Y%m') ,date_format(hiredate,'%Y%m')) month
	         from emp;

	+--------+-------+
	| ename  | month |
	+--------+-------+
	| KING   |   446 |
	| BLAKE  |   452 |
	| CLARK  |   452 |
	| JONES  |   453 |
	| MARTIN |   448 |
	| ALLEN  |   455 |
	| TURNER |   449 |
	| JAMES  |   445 |
	| WARD   |   455 |
	| FORD   |   445 |
	| SMITH  |   457 |
	| SCOTT  |   433 |
	| ADAMS  |   432 |
	| MILLER |   444 |
	+--------+-------+
	14 rows in set (0.01 sec)












■ Oracle vs MySQL의 차이를 총정리

		oracle		vs		MySQL
	1. nvl					ifnull
	2. sysdate				sysdate()
	3. months_between			period_diff
	4. add_months				period_add
	5. last_day				last_day


문제 125. 오늘부터 100달 뒤에 돌아오는 날짜가 어떻게 되는가?

	SQL> select add_months(sysdate,100)
	       from dual;
	
	mysql> select period_add(date_format(sysdate(), '%y%m'),100) from dual;
	+------------------------------------------------+
	| period_add(date_format(sysdate(), '%y%m'),100) |
	+------------------------------------------------+
	|                                         202705 |
	+------------------------------------------------+
	1 row in set (0.00 sec)


	mysql> select substring(aa,1,4) as year,
	    ->        substring(aa,5,2) as month
	    -> from ( select period_add(date_format(sysdate(), '%y%m'),100) aa
	    ->          from dual ) aaa;
	+------+-------+
	| year | month |
	+------+-------+
	| 2027 | 05    |
	+------+-------+
	1 row in set (0.00 sec)




문제 126. 이번달의 마지막 날짜가 어떻게 되는가?

SQL> select last_day(sysdate)
       from dual;

mysql> select last_day( sysdate() )
    ->   from dual;
+-----------------------+
| last_day( sysdate() ) |
+-----------------------+
| 2019-01-31            |
+-----------------------+
1 row in set (0.01 sec)




문제 127. (오늘의 마지막 문제) 오늘부터 이번달 말일까지 총 몇일 남았는지 출력하시오 ! ( to_date 함수 활용 )

	mysql> select to_days(last_day(sysdate()))-to_days(sysdate()) from dual;
	+-------------------------------------------------+
	| to_days(last_day(sysdate()))-to_days(sysdate()) |
	+-------------------------------------------------+
	|                                              28 |
	+-------------------------------------------------+
	1 row in set (0.00 sec)




















